@page "/employees"
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

<h3>Employees</h3>

<button class="custom-add-button" @onclick="NavigateToAddEmployee">Add Employee</button>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else if (employees.Count == 0)
{
    <p><em>No employees found.</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Role</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employees)
            {
                <tr>
                    <td>@emp.FirstName @emp.LastName</td>
                    <td>@emp.Role</td>
                    <td>@emp.Email</td>
                </tr>
            }
        </tbody>
    </table>

}

<style>
    .custom-add-button {
        background-color: #007BFF;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-bottom: 1rem;
    }

    .custom-add-button:hover {
        background-color: #0056b3;
    }

</style>

@code {
    private List<Employee>? employees;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            employees = await Http.GetFromJsonAsync<List<Employee>>("http://localhost:5082/api/employees");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employees: {ex.Message}");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && employees != null)
        {
            var roleCounts = employees
                .GroupBy(e => e.Role)
                .ToDictionary(g => g.Key, g => g.Count());

            await JSRuntime.InvokeVoidAsync("drawRoleChart", roleCounts);
        }
    }

    private void NavigateToAddEmployee()
    {
        NavManager.NavigateTo("/add-employee");
    }

    public class Employee
    {
        public int EmployeeID { get; set; }
        public string FirstName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Role { get; set; } = "";
        public string Email { get; set; } = "";
    }
}
