@page "/add-employee"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Create a New Employee</h3>

<div class="mt-4">
    <div class="mb-3">
        <label for="firstName">First Name:</label>
        <input type="text" id="firstName" @bind="newEmployee.FirstName" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="lastName">Last Name:</label>
        <input type="text" id="lastName" @bind="newEmployee.LastName" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="email">Email:</label>
        <input type="email" id="email" @bind="newEmployee.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="role">Role:</label>
        <input type="text" id="role" @bind="newEmployee.Role" class="form-control" />
    </div>

    <!-- Buttons aligned next to each other -->
    <div class="d-flex justify-content-start mt-3">
        <button class="btn btn-primary me-2" @onclick="OnCreateEmployee">Create</button>
        <button class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
    </div>
</div>

@code {
    /// <summary>
    /// A new employee object that the user is creating.
    /// </summary>
    private Employee newEmployee = new Employee();

    /// <summary>
    /// This method is triggered when the user clicks the "Create" button.
    /// It sends an HTTP POST request to the backend to create a new employee.
    /// </summary>
    private async Task OnCreateEmployee()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:5082/api/employees", newEmployee);

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/employees"); // Redirect after successful creation
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Failed to create employee: {response.StatusCode} - {error}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating employee: {ex.Message}");
        }
    }

    /// <summary>
    /// This method is triggered when the user clicks the "Cancel" button.
    /// It navigates the user back to the employees list page without making any changes.
    /// </summary>
    private void OnCancel()
    {
        Navigation.NavigateTo("/employees");
    }

    /// <summary>
    /// Represents an employee with basic information.
    /// </summary>
    public class Employee
    {
        public int EmployeeID { get; set; }
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
    }
}
